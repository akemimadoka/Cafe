language: cpp
os: linux
dist: bionic

jobs:
  include:
    - &gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-10
            - python3
            - python3-pip
      env:
        - COMPILER_ENV="export CC=gcc-10 && export CXX=g++-10"
      arch: amd64
    - &clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - python3
            - python3-pip
      env:
        - COMPILER_ENV="export CC=clang-11 && export CXX=clang++-11"
      arch: amd64
      before_install:
        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        - echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main" | sudo tee -a /etc/apt/sources.list
        - sudo apt update
        - sudo apt install clang-11
  # 可选支持 arm
  allow_failures:
    - <<: *gcc
      arch: arm64
    # llvm 官方源暂不支持 arm，使用旧版本
    # - <<: *clang
    #   arch: arm64
    - addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - clang
            - python3
            - python3-pip
      env:
        - COMPILER_ENV="export CC=clang && export CXX=clang++"

install:
  - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
  - sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'
  - sudo apt-get update
  - sudo apt install cmake -y
  - sudo python3 -m pip install -U setuptools wheel
  - sudo python3 -m pip install -U conan
  - conan profile new default --detect --force
  - conan profile update settings.compiler.libcxx=libstdc++11 default

before_script:
  - eval "${COMPILER_ENV}"
  - CMAKE=/usr/bin/cmake
  - CTEST=/usr/bin/ctest
  - export CONAN_CMAKE_PROGRAM=$CMAKE

script:
  - mkdir build-debug && pushd build-debug
  - INSTALL_PREFIX=$(pwd)/Install
  - $CMAKE .. -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX -DCMAKE_BUILD_TYPE=Debug -DCAFE_INCLUDE_TESTS=ON
  - $CMAKE --build . --parallel
  - $CMAKE --install .
  - $CTEST
  - popd
  - mkdir build-release && pushd build-release
  - INSTALL_PREFIX=$(pwd)/Install
  - $CMAKE .. -DCMAKE_INSTALL_PREFIX=$INSTALL_PREFIX -DCMAKE_BUILD_TYPE=Release -DCAFE_INCLUDE_TESTS=ON
  - $CMAKE --build . --parallel
  - $CMAKE --install .
  - $CTEST
  - popd
